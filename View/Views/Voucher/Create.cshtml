@using View.ViewModel
@model VoucherViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <!-- Form Tạo Voucher -->
        <div class="col-md-6">
            <h4 class="mb-4">Tạo phiếu giảm giá</h4>
            <form asp-action="Create" asp-controller="Voucher" method="post">
                <div class="form-group mb-3">
                    <label for="VoucherCode">Mã phiếu giảm giá</label>
                    <input type="text" class="form-control" id="VoucherCode" name="Voucher.VoucherCode" required />
                    <span asp-validation-for="Voucher.VoucherCode" class="text-danger"></span>
                </div>


                <div class="form-group mb-3">
                    <label for="Name">Tên phiếu giảm giá</label>
                    <input type="text" class="form-control" id="Name" name="Voucher.Name" required />
                    <span asp-validation-for="Voucher.Name" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="DiscountType">Loại giảm giá</label>
                    <select class="form-control" id="DiscountType" name="Voucher.DiscountType" required>
                        <option value="Percent">Phần trăm</option>
                        <option value="Amount">Tiền</option>
                    </select>
                    <span asp-validation-for="Voucher.DiscountType" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="DiscountPercent">Giá trị giảm phần trăm</label>
                    <input type="number" class="form-control" id="DiscountPercent" name="Voucher.DiscountPercent" step="0.01" min="0" max="100" />
                    <span asp-validation-for="Voucher.DiscountPercent" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="DiscountAmount">Giá trị giảm tiền</label>
                    <input type="number" class="form-control" id="DiscountAmount" name="Voucher.DiscountAmount" step="0.01" min="0" />
                    <span asp-validation-for="Voucher.DiscountAmount" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="MaxDiscountValue">Giá trị giảm tối đa</label>
                    <input type="number" class="form-control" id="MaxDiscountValue" name="Voucher.MaxDiscountValue" step="0.01" min="0" />
                    <span asp-validation-for="Voucher.MaxDiscountValue" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="Stock">Số lượng</label>
                    <input type="number" class="form-control" id="Stock" name="Voucher.Stock" min="0" required />
                    <span asp-validation-for="Voucher.Stock" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="Condition">Điều kiện áp dụng</label>
                    <input type="text" class="form-control" id="Condition" name="Voucher.Condition" />
                    <span asp-validation-for="Voucher.Condition" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="StartDate">Từ ngày</label>
                    <input type="datetime-local" class="form-control" id="StartDate" name="Voucher.StartDate" required />
                    <span asp-validation-for="Voucher.StartDate" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="EndDate">Đến ngày</label>
                    <input type="datetime-local" class="form-control" id="EndDate" name="Voucher.EndDate" required />
                    <span asp-validation-for="Voucher.EndDate" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label>Kiểu</label>
                    <div>
                        <input class="me-1" type="radio" id="Công khai" name="Voucher.Type" value="Công khai" checked />
                        <label class="me-3" for="PublicType">Công khai</label>
                        <input class="me-1" type="radio" id="Cá nhân" name="Voucher.Type" value="Cá nhân" />
                        <label class="me-3" for="PrivateType">Cá nhân</label>
                    </div>
                    <span asp-validation-for="Voucher.Type" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="Status">Trạng thái</label>
                    <select class="form-control" id="Status" name="Voucher.Status" required>
                        <option value="true">Hoạt động</option>
                        <option value="false">Không hoạt động</option>
                    </select>
                    <span asp-validation-for="Voucher.Status" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-success mb-3">Tạo Voucher</button>
            </form>
        </div>

        <!-- Danh Sách Account Sử Dụng Voucher -->
        <div id="CustomerList" class="col-md-6">
            <h4 class="mb-4">Danh sách khách hàng</h4>
            <input type="text" class="form-control mb-3" placeholder="Tìm kiếm khách hàng" />

            <div class="table-responsive">
                <table class="table table-striped styled-table">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Tên</th>
                            <th>Số điện thoại</th>
                            <th>Email</th>
                            <th>Chọn</th> <!-- Cột checkbox luôn hiện tiêu đề -->
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var account in Model.Accounts)
                        {
                            <tr>
                                <td>@Model.Accounts.IndexOf(account) + 1</td> <!-- Thêm số thứ tự -->
                                <td>@account.Name</td>
                                <td>@account.PhoneNumber</td>
                                <td>@account.Email</td>
                                <td>
                                    <div class="checkbox-container" style="display: none;">
                                        <input type="checkbox" name="SelectedCustomerIds" value="@account.Id" />
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center mt-3">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Create", new { currentPage = Model.CurrentPage - 1 })" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Create", new { currentPage = i })">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Create", new { currentPage = Model.CurrentPage + 1 })" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Button for back to list -->
<div class="form-group mb-3 d-flex justify-content-end">
    <a class="btn custom-dark-gray" asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Hàm kiểm tra tính duy nhất của VoucherCode
        document.getElementById("VoucherCode").addEventListener("input", function () {
            var voucherCode = this.value;
            if (voucherCode) {
                $.ajax({
                    url: '@Url.Action("IsVoucherCodeUnique", "Voucher")',
                    type: 'GET',
                    data: { voucherCode: voucherCode },
                    success: function (isUnique) {
                        if (!isUnique) {
                            $("#voucherCodeError").text("Mã phiếu giảm giá đã tồn tại.");
                        } else {
                            $("#voucherCodeError").text("");
                        }
                    },
                    error: function () {
                        $("#voucherCodeError").text("Đã xảy ra lỗi khi kiểm tra mã phiếu giảm giá.");
                    }
                });
            } else {
                $("#voucherCodeError").text("");
            }
        });

        // Hàm ẩn/hiện các checkbox dựa vào loại Type
        function toggleCheckboxes() {
            var isPrivateType = document.getElementById("Cá nhân").checked;
            var checkboxes = document.querySelectorAll(".checkbox-container");

            // Hiển thị checkbox nếu là "Cá nhân", ẩn nếu là "Công khai"
            checkboxes.forEach(function (checkboxContainer) {
                checkboxContainer.style.display = isPrivateType ? "block" : "none";
            });
        }

        // Thực thi hàm khi thay đổi loại Type
        document.getElementById("Công khai").addEventListener("change", toggleCheckboxes);
        document.getElementById("Cá nhân").addEventListener("change", toggleCheckboxes);

        // Gọi hàm để đặt trạng thái ban đầu của các checkbox
        toggleCheckboxes();

        // Hàm ẩn/hiện các ô nhập liệu dựa vào loại giảm giá
        function toggleDiscountFields() {
            var discountType = document.getElementById("DiscountType").value;
            var percentField = document.getElementById("DiscountPercent").parentElement;
            var amountField = document.getElementById("DiscountAmount").parentElement;

            if (discountType === "Percent") {
                percentField.style.display = "block";
                amountField.style.display = "none";
            } else if (discountType === "Amount") {
                percentField.style.display = "none";
                amountField.style.display = "block";
            }
        }

        // Thực thi hàm khi thay đổi loại giảm giá
        document.getElementById("DiscountType").addEventListener("change", toggleDiscountFields);

        // Gọi hàm để đặt trạng thái ban đầu của các trường
        toggleDiscountFields();

    </script>

    <style>
        .custom-dark-gray {
            background-color: #23272b;
            color: white;
            border-color: black;
        }

            .custom-dark-gray:hover {
                background-color: #1c1f23;
            }
    </style>
}

