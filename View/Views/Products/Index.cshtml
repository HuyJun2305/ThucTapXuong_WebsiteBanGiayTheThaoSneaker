@model View.ViewModel.ProductDetailIndexDetailsVM

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<div class="container-fluid">
    <div class="card shadow-sm rounded">
        <div class="card-body">
            <h5 class="card-title fw-semibold mb-4">Sản phẩm</h5>

            <!-- Search Bar & Add Button -->
            <div class="mb-4 d-flex justify-content-between align-items-center">
                <div class="input-group searchbar w-50">
                    <input class="search_input form-control" type="text" id="searchInput" placeholder="Nhập tên, sđt hoặc email">
                    <button class="btn btn-outline-secondary search_icon" type="button" id="searchButton">
                        <i class="ti ti-search"></i>
                    </button>
                </div>
                <a asp-action="Create" class="btn btn-success add_button">+ Thêm mới giày</a>
            </div>

            <!-- Filter & Export Section -->
            <div class="mb-4 d-flex justify-content-between align-items-center">
                <!-- Filters (Loại giày, đế giày, thương hiệu) -->
                <div class="d-flex gap-2">
                    <div class="form-group">
                        <select class="form-select" id="filterGender">
                            <option value="">Giới tính</option>
                            <option value="Nam">Nam</option>
                            <option value="Nữ">Nữ</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <select class="form-select" id="filterStatus">
                            <option value="">Trạng thái</option>
                            <option value="Hoạt động">Hoạt động</option>
                            <option value="Ngừng hoạt động">Ngừng hoạt động</option>
                        </select>
                    </div>
                </div>
                <!-- Export Button -->
                <a href="#" class="btn btn-outline-primary">Xuất Excel</a>
            </div>

            <!-- Nhân viên Table -->
            <div class="table-responsive">
                <table class="table table-striped styled-table">
                    <thead class="table-light">
                        <tr>
                            <th>STT</th>
                            <th>Sản phẩm</th>
                            <th>Ảnh</th>
                            <th>Loại</th>
                            <th>Đế giày</th>
                            <th>Thương hiệu</th>
                            <th>Chất liệu</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Products)
                        {
                            <tr>
                                <td></td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    <!-- Carousel Slide trong cột thứ hai (không có nút điều khiển) -->
                                    <div id="productCarousel" class="carousel slide" data-ride="carousel" data-interval="3000" style="width: 100px;">

                                        <!-- Slide ảnh -->
                                        <div class="carousel-inner">
                                            @foreach (var image in Model.ImagesForProduct.Where(i => i.ProductId == item.Id).Select((value, index) => new { value, index }))
                                            {
                                                <div class="carousel-item @(image.index == 0 ? "active" : "")">
                                                    <img src="@Url.Content(image.value.URL)" alt="NotFound" style="width:100%; height:auto;">
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Category.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Sole.TypeName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Brand.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Material.Name)
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                    <a href="#" class="details-button" data-product-id="@item.Id">Details</a> |
                                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination and Page Controls -->
            <div class="d-flex justify-content-between align-items-center mt-3">
                <!-- Number of Rows per Page -->
                <div class="form-group d-flex align-items-center">
                    <label for="rowsPerPage" class="me-2">Hiển thị</label>
                    <select class="form-select w-auto" id="rowsPerPage">
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="25">25</option>
                    </select>
                </div>

                <!-- Pagination Controls -->
                <nav aria-label="Pagination">
                    <ul class="pagination mb-0" id="paginationControls">
                        <!-- Nút phân trang sẽ được thêm động -->
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- Modal hiển thị chi tiết sản phẩm -->
<div class="modal fade" id="productDetailsModal" tabindex="-1" aria-labelledby="productDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productDetailsModalLabel">Chi tiết sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Nội dung chi tiết sản phẩm sẽ được chèn vào đây bằng JavaScript -->
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>ProductDetailId</th>
                            <th>Image</th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Brand</th>
                            <th>Category</th>
                            <th>Material</th>
                            <th>Sole</th>
                            <th>List Color</th>
                            <th>List Size</th>
                            <th>Stock</th>
                        </tr>
                    </thead>
                    <tbody id="productDetailsTableBody">
                        <!-- Chi tiết sản phẩm sẽ được chèn vào đây -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!--Style-->

<style>
    .modal-lg {
        max-width: 90%; /* Đặt chiều rộng tối đa cho modal */
        width: 90%; /* Đặt chiều rộng modal */
    }
</style>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Thêm sự kiện cho thẻ <a> "Details"
            document.querySelectorAll(".details-button").forEach(button => {
                button.addEventListener("click", function (event) {
                    event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ <a>

                    const productId = button.getAttribute("data-product-id");
                    fetch(`/Products/Details?id=${productId}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error("Network response was not ok");
                            }
                            return response.json();
                        })
                        .then(data => {
                            const tableBody = document.getElementById("productDetailsTableBody");
                            tableBody.innerHTML = "";
                            // Kiểm tra xem products có tồn tại không

                                    // Hiển thị thông tin chi tiết sản phẩm trong modal
                            data.productDetails.forEach((detail, index) => {
                                const row = document.createElement("tr");

                                    // Tìm hình ảnh cho sản phẩm
                                           const imagesForProduct = data.imagesForProduct.filter(img => img.productId === detail.productId && img.colorId === detail.colorId);

                                   // Tạo nội dung carousel cho hình ảnh
                                   let carouselInner = '';
                                   imagesForProduct.forEach((image, imgIndex) => {
                                       carouselInner += `
                                         <div class="carousel-item ${imgIndex === 0 ? "active" : ""}">
                                               <img src="${image.url}" alt="NotFound" style="width:85%; height:auto;">
                                           </div>
                                       `;
                                  });
                                  console.log(carouselInner);
                                   // Nếu không có hình ảnh, có thể hiển thị một thông báo hoặc hình ảnh mặc định
                                   if (carouselInner === '') {
                                       carouselInner = `
                                           <div class="carousel-item active">
                                               <img src="path_to_default_image.jpg" alt="NotFound" style="width:50%; height:auto;">
                                           </div>
                                       `;
                                   }
                        
                                        row.innerHTML = `
                                            <td>${index + 1}</td>
                                            <td>${detail.id}</td>
                                             <td>
                                                    <!-- Carousel Slide trong cột hình ảnh -->
                                                        <div  id="productCarousel${data.imagesForProduct[0].url}" class="carousel slide" data-bs-ride="carousel" data-interval="3000" style="width: 100px;">
                                                    <div class="carousel-inner">
                                                        ${carouselInner}
                                                    </div>
                                                </div>
                                            </td>
                                            <td>${data.products[0].name}</td>
                                            <td>${detail.price}</td>
                                            <td>${data.products[0].brand.name}</td>
                                            <td>${data.products[0].category.name}</td>
                                            <td>${data.products[0].material.name}</td>
                                            <td>${data.products[0].sole.typeName}</td>
                                            <td>${detail.color.name}</td>
                                            <td>${detail.size.value}</td>
                                            <td>${detail.stock}</td>
                                        `;
                                        tableBody.appendChild(row);
                                    });

                                    // Mở modal
                            const productDetailsModal = new bootstrap.Modal(document.getElementById("productDetailsModal"));
                            productDetailsModal.show();
                                })
                        .catch(error => console.error("Error loading product details:", error));
                        });
                    });
                });
    </script>
}
